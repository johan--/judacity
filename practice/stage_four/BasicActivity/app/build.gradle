apply plugin: 'com.android.application'

android {
    compileSdkVersion 26
    defaultConfig {
        applicationId "ru.vpcb.basicactivity"
        minSdkVersion 17
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {

        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation 'com.android.support:design:26.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'

    // backend
    compile project(path: ':backend', configuration: 'android-endpoints')
    compile 'com.google.code.findbugs:jsr305:2.0.1'
// google play services
    implementation 'com.google.android.gms:play-services-ads:11.6.2'

}


task stopServerManually {
    group "Verification.User Endpoint Test"
    description "stop server"
    dependsOn ':backend:appengineStop'
    doLast {
        println("Stop Java Development Server")
    }
}

task startServerManually {
    group "Verification.User Endpoint Test"
    description "Start server"
    dependsOn 'stopServerManually'
    dependsOn ':backend:appengineRun'
    mustRunAfter  'stopServerManually'
    project(":backend").afterEvaluate() { backend ->
        backend.extensions.appengine.daemon = true
    }
    doLast {
        println("Java Development Server started")
    }
}

// run auto in debug flow
//tasks.whenTaskAdded { task ->
//    if (task.name == 'assembleDebug')
//        task.finalizedBy('startServerManually')
//}
